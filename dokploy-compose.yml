services:
  # Backend API & WebRTC Signaling Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fraudsense-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      # MongoDB connection (use MongoDB Atlas or hosted instance for production)
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:password123@mongodb:27017/chatapp?authSource=admin}
      # CORS configuration for Socket.IO and REST API
      - SOCKETIO_CORS_ORIGINS=${SOCKETIO_CORS_ORIGINS:-https://fraudsense-frontend.fauzanazz.com}
      # AI Model endpoints (if using external services)
      - SAILOR2_ENDPOINT=${SAILOR2_ENDPOINT}
      - QWEN2_AUDIO_ENDPOINT=${QWEN2_AUDIO_ENDPOINT}
      # Fraud detection configuration
      - FRAUD_ANALYSIS_DEBOUNCE=${FRAUD_ANALYSIS_DEBOUNCE:-3000}
      - ENABLE_REAL_TIME_ALERTS=${ENABLE_REAL_TIME_ALERTS:-true}
      - STORE_FRAUD_RESULTS=${STORE_FRAUD_RESULTS:-true}
      # TURN Server configuration
      - TURN_DOMAIN=${TURN_DOMAIN:-turn.fauzanazz.com}
      - TURN_PORT=${TURN_PORT:-3478}
      - TURN_TLS_PORT=${TURN_TLS_PORT:-5349}
      - TURN_USER=${TURN_USER:-usermonyet}
      - TURN_PASSWORD=${TURN_PASSWORD:-jasonjahja}
      - TURN_ENABLE_TLS=${TURN_ENABLE_TLS:-true}
      # Server port
      - PORT=3001
    expose:
      - "3001"
    labels:
      # Traefik labels for reverse proxy and SSL
      - "traefik.enable=true"
      - "traefik.http.routers.fraudsense-backend.rule=Host(`${BACKEND_DOMAIN}`)"
      - "traefik.http.routers.fraudsense-backend.entrypoints=websecure"
      - "traefik.http.routers.fraudsense-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.fraudsense-backend.loadbalancer.server.port=3001"
      # WebSocket support
      - "traefik.http.routers.fraudsense-backend.middlewares=sslheader"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
    depends_on:
      - turn
    networks:
      - dokploy-network

  # TURN Server for WebRTC NAT Traversal
  turn:
    image: coturn/coturn:latest
    container_name: fraudsense-turn
    restart: unless-stopped
    network_mode: "host"
    volumes:
      # Mount Let's Encrypt certs (adjust host paths to match your server)
      - /etc/letsencrypt/live/turn.fauzanazz.com/fullchain.pem:/etc/coturn/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/turn.fauzanazz.com/privkey.pem:/etc/coturn/certs/privkey.pem:ro
    environment:
      - TURN_REALM=${TURN_REALM:-turn.fauzanazz.com}
      - TURN_USER=${TURN_USER:-usermonyet}
      - TURN_PASSWORD=${TURN_PASSWORD:-turnpassword}
      - TURN_DOMAIN=${TURN_DOMAIN:-turn.fauzanazz.com}
      - TURN_PUBLIC_IP=${TURN_PUBLIC_IP}
      - TURN_MIN_PORT=${TURN_MIN_PORT:-49152}
      - TURN_MAX_PORT=${TURN_MAX_PORT:-65535}
    command:
      - -n
      - --lt-cred-mech
      - --realm=${TURN_REALM:-turn.fauzanazz.com}
      - --user=${TURN_USER:-usermonyet}:${TURN_PASSWORD:-turnpassword}
      - --server-name=${TURN_DOMAIN:-turn.fauzanazz.com}
      - --listening-port=3478
      - --tls-listening-port=5349
      - --external-ip=${TURN_PUBLIC_IP}
      - --min-port=${TURN_MIN_PORT:-49152}
      - --max-port=${TURN_MAX_PORT:-65535}
      - --fingerprint
      - --no-multicast-peers
      - --no-loopback-peers
      - --no-tlsv1
      - --no-tlsv1_1
      - --ec-curve-name=prime256v1
      - --cert=/etc/coturn/certs/fullchain.pem
      - --pkey=/etc/coturn/certs/privkey.pem
      - --no-cli
      - --log-file=stdout
      - --simple-log
      - --new-log-timestamp
      - --user-quota=50
      - --total-quota=1200
      - --max-bps=3000000
      - --stale-nonce
      - --no-software-attribute
      - --denied-peer-ip=0.0.0.0-0.255.255.255
      - --denied-peer-ip=10.0.0.0-10.255.255.255
      - --denied-peer-ip=172.16.0.0-172.31.255.255
      - --denied-peer-ip=192.168.0.0-192.168.255.255

networks:
  dokploy-network:
    external: true